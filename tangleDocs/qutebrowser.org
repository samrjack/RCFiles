#+TITLE: Config File
#+AUTHOR: Samuel Jackson
#+DESCRIPTION: 
#+STARTUP: overview hidestars indent
#+PROPERTY: header-args :results silent :tangle "../configs/.config/qutebrowser/config.py"

Config file for qutebrowser.
To find documentation on all settings, please see:
https://qutebrowser.org/doc/help/

* Initialization
#+BEGIN_SRC python
# This file has been generated using org tangle. To modify, please see the org file.
#+END_SRC
* Autoconfig
This is here so setting changes done via the GUI are still loaded. To have GUI setting changes not loaded, pass the parameter False.
#+BEGIN_SRC python
config.load_autoconfig()
#+END_SRC

* Session saving
#+BEGIN_SRC python
c.auto_save.session = True
#+END_SRC

* Scrolling
#+BEGIN_SRC python
c.scrolling.smooth = True
#+END_SRC

* Content
#+BEGIN_SRC python
c.content.pdfjs = True
c.content.plugins = True
c.content.cache.size = 2147483647
#+END_SRC

* Spellcheck
#+BEGIN_SRC python
c.spellcheck.languages = ["en-US"]
#+END_SRC

* Color theme
#+BEGIN_SRC python
#c.colors.webpage.darkmode.enabled = True
c.colors.webpage.preferred_color_scheme = "dark"
#+END_SRC

* Hinting
#+BEGIN_SRC python
c.hints.chars = "abcdefghijklmnopqrstuvwxyz"
#+END_SRC

* History
#+BEGIN_SRC python
c.completion.cmd_history_max_items = 10000
c.completion.use_best_match = True
#+END_SRC

* Downloads
#+BEGIN_SRC python
c.downloads.location.suggestion = "both"
c.confirm_quit = ["downloads"]
#+END_SRC

* Keybindings
** Normal mode
#+BEGIN_SRC python
# Bindings for normal mode
config.bind("'", 'mode-enter jump_mark')
config.bind('=', 'zoom')
config.bind('+', 'zoom-in')
config.bind('-', 'zoom-out')
config.bind('.', 'repeat-command')
config.bind('/', 'set-cmd-text /')
config.bind('?', 'set-cmd-text ?')
config.bind(':', 'set-cmd-text :')
config.bind('@', 'run-macro')
config.bind('{{', 'navigate prev -t')
config.bind('}}', 'navigate next -t')
config.bind('[[', 'navigate prev')
config.bind(']]', 'navigate next')
config.bind('`', 'mode-enter set_mark')
config.bind('<', 'tab-move -')
config.bind('>', 'tab-move +')
config.bind('^', 'tab-focus 1')
config.bind('$', 'tab-focus -1')
config.bind('<Ctrl-^>', 'tab-focus last')

config.bind(';b', 'hint all tab-bg')
config.bind(';d', 'hint all download')
config.bind(';D', 'hint all delete')
config.bind(';f', 'hint all tab-fg')
config.bind(';h', 'hint all hover')
config.bind(';i', 'hint images')
config.bind(';I', 'hint images tab')
config.bind(';o', 'hint links fill :open {hint-url}')
config.bind(';O', 'hint links fill :open -t -r {hint-url}')
config.bind(';r', 'hint --rapid links tab-bg')
config.bind(';R', 'hint --rapid links window')
config.bind(';t', 'hint inputs')
config.bind(';y', 'hint links yank')
config.bind(';Y', 'hint links yank-primary')


config.bind('ad', 'download-cancel')
config.bind('<Ctrl-A>', 'navigate increment')
config.unbind('b')
config.bind('bd', 'set-cmd-text -s :quickmark-del ')
config.bind('bl', 'set-cmd-text -s :quickmark-load')
config.bind('bs', 'set-cmd-text -s :quickmark-add {url:pretty} ')
config.bind('B', 'set-cmd-text -s :quickmark-load -t')
config.bind('<Ctrl-B>', 'scroll-page 0 -1')
config.bind('<Alt-B>', 'fullscreen')
config.bind('cd', 'download-clear')
config.bind('cm', 'clear-messages')
config.bind('co', 'tab-only')
config.bind('d', 'scroll-page 0 0.5')
config.bind('D', 'scroll-page 0 1')
config.bind('<Ctrl-D>', 'scroll-page 0 0.5')
config.bind('<Alt-D>', 'hint all delete')
config.bind('f', 'hint all current')
config.bind('F', 'hint all tab-fg')
config.bind('<Ctrl-F>', 'hint all tab-bg')

config.bind('g$', 'tab-focus -1')
config.bind('g0', 'tab-focus 1')
config.bind('gB', 'set-cmd-text -s :bookmark-load -t')
config.bind('gC', 'tab-clone')
config.bind('gO', 'set-cmd-text :open -t -r {url:pretty}')
config.bind('gU', 'navigate up -t')
config.bind('g^', 'tab-focus 1')
config.bind('ga', 'open -t')
config.bind('gb', 'set-cmd-text -s :bookmark-load')
config.bind('gd', 'download')
config.bind('gf', 'view-source')
config.bind('gg', 'scroll-to-perc 0')
config.bind('gl', 'tab-move -')
config.bind('gm', 'tab-move')
config.bind('go', 'set-cmd-text :open {url:pretty}')
config.bind('gr', 'tab-move +')
config.bind('gt', 'set-cmd-text -s :buffer')
config.bind('gu', 'navigate up')

config.bind('G', 'scroll-to-perc')
config.bind('h', 'scroll left')
config.bind('H', 'back')
config.bind('<Ctrl-h>', 'back --tab --bg')
config.bind('i', 'mode-enter insert')
config.bind('I', 'mode-enter insert')
config.bind('j', 'scroll down')
config.bind('J', 'tab-prev')
config.bind('k', 'scroll up')
config.bind('K', 'tab-next')
config.bind('l', 'scroll right')
config.bind('L', 'forward')
config.bind('<Ctrl-l>', 'forward --tab --bg')
config.bind('m', 'quickmark-save')
config.bind('M', 'bookmark-add')
config.bind('<Ctrl-M>', 'messages -t')
config.bind('n', 'search-next')
config.bind('N', 'search-prev')
config.bind('<Ctrl-N>', 'open -w')
config.bind('<Ctrl-Shift-N>', 'open -p')
config.bind('o', 'set-cmd-text -s :open')
config.bind('O', 'set-cmd-text -s :open -t')
config.bind('<Ctrl-O>', 'set-cmd-text -s :open {url:pretty}')
config.bind('<Alt-O>', 'set-cmd-text -s :open -t {url:pretty}')
config.bind('pP', 'open -- {primary}')
config.bind('pp', 'open -- {clipboard}')
config.bind('Pp', 'open -t -- {clipboard}')
config.bind('PP', 'open -t -- {primary}')
config.bind('<Ctrl-p>', 'tab-pin')
config.bind('<Ctrl-Alt-p>', 'print')
config.bind('q', 'record-macro')
config.bind('<Ctrl-Q>', 'quit')
config.bind('r', 'reload')
config.bind('R', 'reload -f')
config.bind('<Ctrl-R>', 'config-source')
config.bind('sd', 'set-cmd-text -s :session-delete ')
config.bind('sl', 'set-cmd-text -s :session-load ')
config.bind('sr', 'set-cmd-text -s :session-load ')
#config.bind('ss', 'set-cmd-text -s :set')
config.bind('ss', 'set-cmd-text -s :session-save ')
config.bind('Sb', 'open qute://bookmarks#bookmarks')
config.bind('Sh', 'open qute://history')
config.bind('Sq', 'open qute://bookmarks')
config.bind('Ss', 'open qute://settings')
config.bind('<Ctrl-s>', 'stop')
config.bind('th', 'back -t')
config.bind('tl', 'forward -t')
config.bind('T', 'set-cmd-text -s :open -t')
#config.bind('T', 'tab-focus')
config.bind('<Ctrl-T>', 'open -t')
config.bind('<Ctrl-Shift-T>', 'undo')
config.bind('u', 'scroll-page 0 -0.5')
config.bind('U', 'scroll-page 0 -1')
config.bind('<Ctrl-U>', 'scroll-page 0 -0.5')
config.bind('v', 'mode-enter caret')
config.bind('<Ctrl-V>', 'mode-enter passthrough')
config.bind('wB', 'set-cmd-text -s :bookmark-load -w')
config.bind('wO', 'set-cmd-text :open -w {url:pretty}')
config.bind('wP', 'open -w -- {primary}')
config.bind('wb', 'set-cmd-text -s :quickmark-load -w')
config.bind('wf', 'hint all window')
config.bind('wh', 'back -w')
config.bind('wi', 'inspector')
config.bind('wl', 'forward -w')
config.bind('wo', 'set-cmd-text -s :open -w')
config.bind('wp', 'open -w -- {clipboard}')
config.bind('<Ctrl-W>', 'tab-close')
config.bind('<Ctrl-Shift-W>', 'close')
#config.bind('xO', 'set-cmd-text :open -b -r {url:pretty}')
#config.bind('xo', 'set-cmd-text -s :open -b')
config.bind('x', 'tab-close')
config.bind('X', 'undo')
config.bind('<Ctrl-X>', 'navigate decrement')
config.bind('yd', 'yank domain')
config.bind('yD', 'yank domain -s')
config.bind('yf', 'hint all yank')
config.bind('yp', 'yank pretty-url')
config.bind('yP', 'yank pretty-url -s')
config.bind('yt', 'yank title')
config.bind('yT', 'yank title -s')
config.bind('yy', 'yank')
config.bind('yY', 'yank -s')
config.bind('ZQ', 'quit')
config.bind('ZZ', 'quit --save')

config.bind('<Alt-1>', 'tab-focus 1')
config.bind('<Alt-2>', 'tab-focus 2')
config.bind('<Alt-3>', 'tab-focus 3')
config.bind('<Alt-4>', 'tab-focus 4')
config.bind('<Alt-5>', 'tab-focus 5')
config.bind('<Alt-6>', 'tab-focus 6')
config.bind('<Alt-7>', 'tab-focus 7')
config.bind('<Alt-8>', 'tab-focus 8')
config.bind('<Alt-9>', 'tab-focus 9')
config.bind('<Alt-0>', 'tab-focus -1')

config.bind('<Ctrl-Return>', 'follow-selected -t')
config.bind('<Ctrl-Tab>', 'tab-focus last')
config.bind('<F11>', 'fullscreen')
config.bind('<F5>', 'reload')
config.bind('<Ctrl-F5>', 'reload -f')
config.bind('<Return>', 'follow-selected')
config.bind('<back>', 'back')
config.bind('<forward>', 'forward')
config.bind('<Ctrl-PgDown>', 'tab-next')
config.bind('<Ctrl-PgUp>', 'tab-prev')
#+END_SRC

** Caret mode (visual mode)
#+BEGIN_SRC python
# Bindings for caret mode
config.bind('$', 'move-to-end-of-line', mode='caret')
config.bind('{', 'move-to-end-of-prev-block', mode='caret')
config.bind('}', 'move-to-end-of-next-block', mode='caret')
config.bind('[', 'move-to-start-of-prev-block', mode='caret')
config.bind(']', 'move-to-start-of-next-block', mode='caret')
config.bind('b', 'move-to-prev-word', mode='caret')
config.bind('c', 'mode-enter normal', mode='caret')
config.bind('e', 'move-to-end-of-word', mode='caret')
config.bind('gg', 'move-to-start-of-document', mode='caret')
config.bind('G', 'move-to-end-of-document', mode='caret')
config.bind('h', 'move-to-prev-char', mode='caret')
config.bind('H', 'scroll left', mode='caret')
config.bind('j', 'move-to-next-line', mode='caret')
config.bind('J', 'scroll down', mode='caret')
config.bind('k', 'move-to-prev-line', mode='caret')
config.bind('K', 'scroll up', mode='caret')
config.bind('l', 'move-to-next-char', mode='caret')
config.bind('L', 'scroll right', mode='caret')
config.bind('v', 'toggle-selection', mode='caret')
config.bind('w', 'move-to-next-word', mode='caret')
config.bind('y', 'yank selection', mode='caret')
config.bind('Y', 'yank selection -s', mode='caret')
config.bind('0', 'move-to-start-of-line', mode='caret')
config.bind('<Ctrl-Space>', 'drop-selection', mode='caret')
config.bind('<Escape>', 'mode-leave', mode='caret')
config.bind('<Return>', 'yank selection', mode='caret')
config.bind('<Space>', 'toggle-selection', mode='caret')
#+END_SRC

** Command mode
#+BEGIN_SRC python
# Bindings for command mode
config.bind('<Ctrl-?>', 'rl-delete-char', mode='command')
config.bind('<Ctrl-A>', 'rl-beginning-of-line', mode='command')
config.bind('<Ctrl-B>', 'rl-backward-char', mode='command')
config.bind('<Alt-B>', 'rl-backward-word', mode='command')
config.bind('<Ctrl-C>', 'completion-item-yank', mode='command')
config.bind('<Ctrl-D>', 'completion-item-del', mode='command')
config.bind('<Alt-D>', 'rl-kill-word', mode='command')
config.bind('<Ctrl-E>', 'rl-end-of-line', mode='command')
config.bind('<Ctrl-F>', 'rl-forward-char', mode='command')
config.bind('<Alt-F>', 'rl-forward-word', mode='command')
config.bind('<Ctrl-H>', 'rl-backward-delete-char', mode='command')
config.bind('<Ctrl-K>', 'rl-kill-line', mode='command')
config.bind('<Ctrl-N>', 'command-history-next', mode='command')
config.bind('<Ctrl-P>', 'command-history-prev', mode='command')
config.bind('<Ctrl-Return>', 'command-accept --rapid', mode='command')
config.bind('<Ctrl-Shift-C>', 'completion-item-yank --sel', mode='command')
config.bind('<Ctrl-Shift-Tab>', 'completion-item-focus prev-category', mode='command')
config.bind('<Ctrl-Tab>', 'completion-item-focus next-category', mode='command')
config.bind('<Ctrl-U>', 'rl-unix-line-discard', mode='command')
config.bind('<Ctrl-W>', 'rl-unix-word-rubout', mode='command')
config.bind('<Ctrl-Y>', 'rl-yank', mode='command')
config.bind('<Down>', 'completion-item-focus --history next', mode='command')
config.bind('<Escape>', 'mode-leave', mode='command')
config.bind('<Return>', 'command-accept', mode='command')
config.bind('<Shift-Delete>', 'completion-item-del', mode='command')
config.bind('<Shift-Tab>', 'completion-item-focus prev', mode='command')
config.bind('<Tab>', 'completion-item-focus next', mode='command')
config.bind('<Up>', 'completion-item-focus --history prev', mode='command')
config.bind('<Alt-Backspace>', 'rl-backward-kill-word', mode='command')
#+END_SRC

** Hint mode
#+BEGIN_SRC python
# Bindings for hint mode
config.bind('<Ctrl-B>', 'hint all tab-bg', mode='hint')
config.bind('<Ctrl-F>', 'hint links', mode='hint')
config.bind('<Ctrl-R>', 'hint --rapid links tab-bg', mode='hint')
config.bind('<Escape>', 'mode-leave', mode='hint')
config.bind('<Return>', 'follow-hint', mode='hint')
#+END_SRC

** Insert mode
#+BEGIN_SRC python
# Bindings for insert mode
config.bind('<Ctrl-X><Ctrl-E>', 'open-editor', mode='insert')
config.bind('<Escape>', 'mode-leave', mode='insert')
config.bind('<Shift-Ins>', 'insert-text {primary}', mode='insert')

# Recreated readline bindings for insert mode
config.bind('<Ctrl-h>', 'fake-key <Backspace>', 'insert')
config.bind('<Ctrl-a>', 'fake-key <Home>', 'insert')
config.bind('<Ctrl-e>', 'fake-key <End>', 'insert')
config.bind('<Ctrl-b>', 'fake-key <Left>', 'insert')
config.bind('<Mod1-b>', 'fake-key <Ctrl-Left>', 'insert')
config.bind('<Ctrl-f>', 'fake-key <Right>', 'insert')
config.bind('<Mod1-f>', 'fake-key <Ctrl-Right>', 'insert')
config.bind('<Ctrl-p>', 'fake-key <Up>', 'insert')
config.bind('<Ctrl-n>', 'fake-key <Down>', 'insert')
config.bind('<Mod1-d>', 'fake-key <Ctrl-Delete>', 'insert')
config.bind('<Ctrl-d>', 'fake-key <Delete>', 'insert')
config.bind('<Ctrl-w>', 'fake-key <Ctrl-Backspace>', 'insert')
config.bind('<Ctrl-u>', 'fake-key <Shift-Home><Delete>', 'insert')
config.bind('<Ctrl-k>', 'fake-key <Shift-End><Delete>', 'insert')
config.bind('<Ctrl-x><Ctrl-e>', 'open-editor', 'insert')
#+END_SRC

** Passthrough mode
#+BEGIN_SRC python
# Bindings for passthrough mode
config.bind('<Ctrl-V>', 'mode-leave', mode='passthrough')
#+END_SRC

** Prompt mode
#+BEGIN_SRC python
# Bindings for prompt mode
config.bind('<Alt-B>', 'rl-backward-word', mode='prompt')
config.bind('<Alt-Backspace>', 'rl-backward-kill-word', mode='prompt')
config.bind('<Alt-D>', 'rl-kill-word', mode='prompt')
config.bind('<Alt-F>', 'rl-forward-word', mode='prompt')
config.bind('<Ctrl-?>', 'rl-delete-char', mode='prompt')
config.bind('<Ctrl-A>', 'rl-beginning-of-line', mode='prompt')
config.bind('<Ctrl-B>', 'rl-backward-char', mode='prompt')
config.bind('<Ctrl-E>', 'rl-end-of-line', mode='prompt')
config.bind('<Ctrl-F>', 'rl-forward-char', mode='prompt')
config.bind('<Ctrl-H>', 'rl-backward-delete-char', mode='prompt')
config.bind('<Ctrl-K>', 'rl-kill-line', mode='prompt')
config.bind('<Ctrl-U>', 'rl-unix-line-discard', mode='prompt')
config.bind('<Ctrl-W>', 'rl-unix-word-rubout', mode='prompt')
config.bind('<Ctrl-X>', 'prompt-open-download', mode='prompt')
config.bind('<Down>', 'prompt-item-focus next', mode='prompt')
config.bind('<Escape>', 'mode-leave', mode='prompt')
config.bind('<Return>', 'prompt-accept', mode='prompt')
config.bind('<Shift-Tab>', 'prompt-item-focus prev', mode='prompt')
config.bind('<Tab>', 'prompt-item-focus next', mode='prompt')
config.bind('<Up>', 'prompt-item-focus prev', mode='prompt')
config.bind('<Ctrl-N>', 'prompt-accept no', mode='prompt')
config.bind('<Ctrl-Y>', 'prompt-accept yes', mode='prompt')

# Bindings for register mode
config.bind('<Escape>', 'mode-leave', mode='register')
#+END_SRC

* Ad block
This little function was originally pulled from [[https://gitlab.com/jgkamat/dotfiles/blob/master/qutebrowser/.config/qutebrowser/pyconfig/adblock-yt.py][here]] but will probably be replaced some day with a better plugin. For now, I can't complain and don't want to dive further into qutebrowser plugins.
#+BEGIN_SRC python
from qutebrowser.api import interceptor

    # Youtube adblock
def filter_yt(info: interceptor.Request):
    """Block the given request if necessary."""
    url = info.request_url
    if (url.host() == 'www.youtube.com' and
        url.path() == '/get_video_info' and
            '&adformat=' in url.query()):
        info.block()

interceptor.register(filter_yt)
#+END_SRC

* Local Variables
The below allows this file to tangle and produce the output RC file whenever the document is saved.

;; Local Variables:
;; eval: (add-hook 'after-save-hook (lambda () (org-babel-tangle)))
;; End:
